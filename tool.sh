#!/bin/bash
	
# Ανδρόνικος Κυριακού ΑΜ:5806

#Aρχικοποιούμε μεταβλητές οι οποίες λειτουργούν ως flags για να δεχθούμε την είσοδο του χρήστη και να αποφασίσουμε ποια 
#λειτουργία πρέπει να εκτελεστεί

file=0							#ελέγχει αν έχει δοθεί -file
id=0							#αποθηκεύει την τιμή του id που δίνεται
firstnames=0					#ελέγχει αν έχει δοθεί --firstnames
lastnames=0						#ελέγχει αν έχει δοθεί --lastnames
dateA=0							#αποθηκεύει την ημερομηνία πάνω από την οποία ζητάμε να εμφανιστούν στοιχεία χρηστών
dateB=0							#αποθηκεύει την ημερομηνία κάτω από την οποία ζητάμε να εμφανιστούν στοιχεία χρηστών
browsers=0						#ελέγχει αν έχει δοθεί --browsers
edit=0							#ελέγχει αν έχει δοθεί --edit
line=0							#αποθηκεύει την γραμμή του αρχείου στην οποία θα γίνουν αλλαγές


#Η παρακάτω while χρησιμοποιεί μια case προκειμένουν να διαβάσει όλη την είσοδο του χρήστη και με διαδοχικά shift να 
#αρχικοποιήσει τις παραπάνω μεταβλητές

while [ "$1" != "" ]; do
    case $1 in
        -f )  				#αν δοθεί -f μετά από ένα shift στην θέση $1 θα έχει έρθει το όνομα του αρχείου το οποίο αποθηκεύουμε 
			shift			#στην μεταβλητή filename για μετέπειτα χρήση
            filename=$1
            file=1 
            ;;
        -id )
			shift			#αποθηκεύουμε το id που δίνει ο χρήστης
        	id=$1
        	;;
        --firstnames )
			firstnames=1 	#κάνουμε 1 την μεταβλητή firstnames για να εμφανίσουμε τα μικρά ονόματα παρακάτω
			;;
		--lastnames )
			lastnames=1 	#κάνουμε 1 την μεταβλητή lastnames για να εμφανίσουμε τα επώνυμα παρακάτω
			;;
		--born-since )
			shift
			dateA="$(echo $1 | tr -d "-")"	#ουσιαστικά αφαιρούμε τις "-" και βλέπουμε την ημερομηνία που δίνεται σαν αριθμό
			;;								#της μορφής yyyymmdd
		--born-until )
			shift
			dateB="$(echo $1 | tr -d "-")"
			;;
		--browsers )	
			browsers=1 		#κάνουμε 1 την μεταβλητή browsers για να εμφανίσουμε τους browsers παρακάτω
			;;
		--edit )
			edit=1;			#κάνουμε 1 την μεταβλητή edit για να ενεργοποιήσουμε την επεξεργασία και δεχομαστε το μέρος και τις 
			shift			#αλλαγές που πρέπει να γίνουν
			id=$1
			shift
			column=$1
			shift
			value=$1
			;;
    esac
    shift
done

#O κανόνας !/\#/ σε όλα τα παρακάτω ερωτήματα χρησιμοποιείται για να αγνοηθούν οι γραμμές με σχόλια!

#Ερώτημα Β 
if [[ $file != 0 && $id != 0 && $edit == 0 ]];then						
	awk -v aid="$id" -F "|" ' !/\#/ && $1 == aid { print $2,$3,$5} ' $filename

#Ερώτημα C	
elif [ $firstnames != 0 ]; then											
	awk -F "|" '!/\#/ {print $2}' $filename |sort|uniq

#Ερώτημα D	
elif [ $lastnames != 0 ]; then											
	awk -F "|" '!/\#/ {print $3}' $filename |sort|uniq

#Ερώτημα Ε

#Με χρήση της συνάρτησης split η ημερομηνία αποθηκεύεται σε ένα πίνακα και μετά μετατρέπεται στην μορφή yyyymmdd
#προκειμένου να γινουν οι συγκρίσεις

## Γεννημένοι από κάποια ημερομηνία μέχρι κάποια ημερομηνία
elif [[ $dateA != 0 && $dateB != 0 ]];then	
	awk -F "|" -v bsince="$dateA" -v buntil="$dateB" -v bday=0 '!/\#/ {split($5,date,"-"); bday=date[1]*10000+ date[2]*100+date[3]; if(bday>=bsince && bday<=buntil)  print $0;}' $filename
## Γεννημένοι μετά από κάποια ημερομηνία
elif [ $dateA != 0 ];then
	awk -F "|" -v bsince="$dateA" -v bday=0 '!/\#/ {split($5,date,"-"); bday=date[1]*10000+ date[2]*100+date[3]; if(bday>=bsince)  print $0;}' $filename
## Γεννημένοι πριν από κάποια ημερομηνία
elif [ $dateB != 0 ];then
	awk -F "|" -v buntil="$dateB" -v bday=0 '!/\#/ {split($5,date,"-"); bday=date[1]*10000+ date[2]*100+date[3]; if(bday<=buntil)  print $0;}' $filename

#Ερώτημα F 

# Αν το όνομα του browser είναι δύο λέξεις τότε χρησιμοποίείται ο πρώτος κανόνας αλλιώς ο δεύτερος
# Η χρήση του awk στο τέλος είναι για να εμφανίζεται πρώτα το όνομα του browser και μετα το πλήθος των χρηστών του

elif [ $browsers != 0 ];then
	awk -F "|" '!/\#/  {print $8}' $filename |sort|uniq -c|awk '
	NF == 3 {print $2,$3,$1}
	NF == 2 {print $2,$1}'

#Ερώτημα G

#Αρχικά γίνεται έλεγχος για το αν η αλλαγή είναι νόμιμη. Η μεταβλητή pattern αποθηκεύει το περιεχόμενο της στήλης 
#προς αντικατάσταση , ενώ η μεταβλητή line την γραμμή που πρέπει να γίνει η αντικατάσταση. Οι δύο αυτές μεταβλητές περνιούνται
#στο sed το οποίο κάνει την αντικατάσταση και αποθηκεύει την έξοδο σε ένα αρχείο με όνομα tmp το οποίο στη συνέχεια αντικαθιστά το
#αρχείο εισόδου.

elif [ $edit != 0 ];then
	if [[ $column -le 1 || $column -gt 8 ]];then
		exit 1
	fi
	pattern=$(awk -v aid="$id" -v col="$column" -F "|" '!/\#/ && $1 == aid {print $(col)} ' $filename )
	line=$(awk -v aid="$id" -v col="$column" -F "|" '!/\#/ && $1 == aid {print NR} ' $filename )
	if [[ $line ==	"" ]];then
		exit 1
	fi
		sed "$line s/$pattern/$value/g" "$filename"  > tmp && mv tmp $filename

#Ερώτημα Α
elif [ $file != 0 ]; then
	awk	'!/\#/ {print $0}' $filename

#Εκτύπωση ΑΜ σε περίπτωση εκτέλεσης χωρίς παραμέτρους	
else
	echo 5806
fi



